# to be run inside /home/isa22/lab1/syn
# compile the needed project files

analyze -f VHDL -lib WORK /home/isa22/lab1/src/filter_pkg.vhd 
analyze -f VHDL -lib WORK /home/isa22/lab1/src/reg.vhd
analyze -f VHDL -lib WORK /home/isa22/lab1/src/iir_filterDP.vhd
analyze -f VHDL -lib WORK /home/isa22/lab1/src/iir_filterCU.vhd
analyze -f VHDL -lib WORK /home/isa22/lab1/src/iir_filter.vhd 


set power_preserve_rtl_hier_names true
elaborate iir_filter -arch structure -lib WORK

#define clk 
#if we set clk period to 0 synthesizer will automatically provide f_max as a negative slack time

create_clock "clk" -name "MY_CLOCK" -period 25
set_dont_touch_network MY_CLOCK 

# setting clk jitter + in/out delays
set_clock_uncertainty 0.05 [get_clocks MY_CLK]
set_input_delay 0.5 -max -clock MY_CLK [remove_from_collection [all_inputs] clk]
set_output_delay 0.5 -max -clock MY_CLK [all_outputs]
#setting out load as buffer 
set OLOAD [load_of NangateOpenCellLibrary/BUF_X4/A]
set_load $OLOAD [all_outputs]

compile

#reports
report_timing > ./timing_report.txt
report_area > ./area_report.txt

#power


ungroup -all -flatten
change_names -hierarchy -rules verilog

#.sdf->delays .v->netlist .sdc->constraints_to_in_out

write_sdf ../netlist/iir_filter.sdf
write -f verilog -hierarchy -output ../netlist/iir_filter.v
write_sdc ../netlist/iir_filter.sdc